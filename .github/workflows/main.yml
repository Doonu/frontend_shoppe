name: Linting, testing, building

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Выберите окружение для деплоя (prod, staging)'
        required: true
        default: 'prod'

jobs:
  test:
    name: Test (Linting & Unit Tests)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 17

      - name: Install dependencies
        run: npm install

      - name: Lint code
        run: npm run lint

      - name: Run unit tests
        run: npm run test:unit

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 17

      - name: Install dependencies
        run: npm install

      - name: Verify installed dependencies
        run: npm list

      - name: Build production project
        run: npm run build:prod

      - name: Verify build directory
        run: ls -la ./build

      - name: Deploy to server with password
        env:
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          TARGET_DIR: ${{ secrets.TARGET_DIR }}
        run: |
          sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST "echo 'SSH connection successful'"
          sshpass -p "$SERVER_PASSWORD" rsync -avz --rsh="ssh -o StrictHostKeyChecking=no" ./build/ $SERVER_USER@$SERVER_HOST:$TARGET_DIR


#      - name: Upload build artifacts
#        uses: actions/upload-artifact@v4
#        with:
#          name: build
#          path: ./build
#          retention-days: 7

#  deploy:
#    name: Deploy Application
#    runs-on: ubuntu-latest
#    needs: build
##    if: github.event_name == 'workflow_dispatch'
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Install sshpass
#        run: sudo apt-get update && sudo apt-get install -y sshpass
#
#      - name: Download build artifacts
#        uses: actions/download-artifact@v4
#        with:
#          name: build
#
#      - name: Verify build directory after download
#        run: ls -la ./build

#      - name: Deploy to server with password
#        env:
#          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
#          SERVER_USER: ${{ secrets.SERVER_USER }}
#          SERVER_HOST: ${{ secrets.SERVER_HOST }}
#          TARGET_DIR: ${{ secrets.TARGET_DIR }}
#        run: |
#          sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST "echo 'SSH connection successful'"
#          sshpass -p "$SERVER_PASSWORD" rsync -avz --rsh="ssh -o StrictHostKeyChecking=no" ./build/ $SERVER_USER@$SERVER_HOST:$TARGET_DIR
