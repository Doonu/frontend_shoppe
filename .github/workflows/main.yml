name: Linting, testing, building

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Выберите окружение для деплоя (prod, staging)'
        required: true
        default: 'prod'


jobs:
  test:
    name: Test (Linting & Unit Tests)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 17.x ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Lint code
        run: npm run lint

      - name: Run unit tests
        run: npm run test:unit

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test # Выполняется только после успешного завершения тестов
    strategy:
      matrix:
        node-version: [17.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Build production project
        run: npm run build:prod

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: ./build

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: build
#    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build

      - name: Deploy to server
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          TARGET_DIR: ${{secrets.TARGET_DIR }}
        run: |
          echo "$SSH_KEY" > deploy_key.pem
          chmod 600 deploy_key.pem
          rsync -avz -e "ssh -i deploy_key.pem -o StrictHostKeyChecking=no" ./build/ $SERVER_USER@$SERVER_HOST:$TARGET_DIR
          rm deploy_key.pem
